'From Pharo1.0beta of 16 May 2008 [Latest update: #10401] on 19 August 2009 at 8:32:12 am'!Object subclass: #TwitterLib	instanceVariableNames: 'userId password baseUrl'	classVariableNames: ''	poolDictionaries: ''	category: 'Twitter-Lib'!!HTTPSocket class methodsFor: 'utilities' stamp: 'jugyo 8/15/2009 23:19'!argString: args	"Return the args in a long string, as encoded in a url"	| argsString first |	args isString ifTrue: ["sent in as a string, not a dictionary"		^ (args first = $? ifTrue: [''] ifFalse: ['?']), args].	argsString _ WriteStream on: String new.	argsString nextPut: $?.	first _ true.	args associationsDo: [ :assoc |		first ifTrue: [ first _ false ] ifFalse: [ argsString nextPut: $& ].		argsString nextPutAll: assoc key encodeForHTTP.		argsString nextPut: $=.		argsString nextPutAll: assoc value encodeForHTTP. ].	^ argsString contents! !!TwitterLib methodsFor: 'actions' stamp: 'jugyo 8/15/2009 22:55'!friendsTimeline	^self getFromPath: '/statuses/friends_timeline.json'.! !!TwitterLib methodsFor: 'actions' stamp: 'jugyo 8/15/2009 22:55'!getFromPath: path	^self getFromPath: path data: nil.! !!TwitterLib methodsFor: 'actions' stamp: 'jugyo 8/19/2009 00:21'!getFromPath: path data: data	| stream |	stream := HTTPSocket httpGet: baseUrl , path args: data user: userId passwd: password.     ^Json readFrom: (stream contents convertFromEncoding: #'utf-8') readStream! !!TwitterLib methodsFor: 'actions' stamp: 'jugyo 8/15/2009 22:56'!postToPath: path	^self postToPath: path data: nil.! !!TwitterLib methodsFor: 'actions' stamp: 'jugyo 8/19/2009 00:21'!postToPath: path data: data	| stream |	stream := HTTPSocket httpPost: baseUrl , path args: data user: userId passwd: password.     ^Json readFrom: (stream contents convertFromEncoding: #'utf-8') readStream! !!TwitterLib methodsFor: 'actions' stamp: 'jugyo 8/15/2009 23:01'!update: text	|data|	data := Dictionary new.	data at: 'status' put: text.	^ self postToPath: '/statuses/update.json' data: data.! !!TwitterLib methodsFor: 'accessors' stamp: 'jugyo 8/15/2009 22:47'!baseUrl: aString	baseUrl := aString! !!TwitterLib methodsFor: 'accessors' stamp: 'jugyo 8/15/2009 22:43'!password: aString	password := aString! !!TwitterLib methodsFor: 'accessors' stamp: 'jugyo 8/15/2009 22:43'!userId: aString	userId := aString! !!TwitterLib class methodsFor: 'instance creation' stamp: 'jugyo 8/17/2009 08:40'!user: userId password: password	"TwitterLib user: 'foo' password: 'bar'"	^self user: userId password: password baseUrl: 'http://twitter.com'.! !!TwitterLib class methodsFor: 'instance creation' stamp: 'jugyo 8/17/2009 08:39'!user: userId password: password baseUrl: baseUrl	"TwitterLib user: 'foo' password: 'bar' baseUrl: 'https://twitter.com'"	^(self new initialize) userId: userId; password: password; baseUrl: baseUrl.! !